// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleLeaseApp.Models;

#nullable disable

namespace VehicleLeaseApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250712152018_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("VehicleLeaseApp.Models.Branch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BranchId"));

                    b.Property<string>("Location")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("BranchId");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("VehicleLeaseApp.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<int?>("ClientId1")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ClientId");

                    b.HasIndex("ClientId1");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("VehicleLeaseApp.Models.Driver", b =>
                {
                    b.Property<int>("DriverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DriverId"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LicenseNumber")
                        .HasColumnType("longtext");

                    b.HasKey("DriverId");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("VehicleLeaseApp.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("ContactInfo")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("SupplierId1")
                        .HasColumnType("int");

                    b.HasKey("SupplierId");

                    b.HasIndex("SupplierId1");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("VehicleLeaseApp.Models.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("DriverId")
                        .HasColumnType("int");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("VehicleId");

                    b.HasIndex("BranchId");

                    b.HasIndex("ClientId");

                    b.HasIndex("DriverId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("VehicleLeaseApp.Models.Client", b =>
                {
                    b.HasOne("VehicleLeaseApp.Models.Client", null)
                        .WithMany("Vehicles")
                        .HasForeignKey("ClientId1");
                });

            modelBuilder.Entity("VehicleLeaseApp.Models.Supplier", b =>
                {
                    b.HasOne("VehicleLeaseApp.Models.Supplier", null)
                        .WithMany("Vehicles")
                        .HasForeignKey("SupplierId1");
                });

            modelBuilder.Entity("VehicleLeaseApp.Models.Vehicle", b =>
                {
                    b.HasOne("VehicleLeaseApp.Models.Branch", "Branch")
                        .WithMany("Vehicles")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleLeaseApp.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleLeaseApp.Models.Driver", "Driver")
                        .WithMany("Vehicles")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleLeaseApp.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Client");

                    b.Navigation("Driver");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("VehicleLeaseApp.Models.Branch", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("VehicleLeaseApp.Models.Client", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("VehicleLeaseApp.Models.Driver", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("VehicleLeaseApp.Models.Supplier", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
